/* MinecraftCAD - Workspace Components */
/* Canvas area, grid system, and workspace-specific styles */

/* Canvas Container */
.canvas-area {
  position: relative;
  overflow: hidden;
  background: var(--workspace-bg);
}

/* Grid Overlay */
.canvas-area::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    linear-gradient(var(--grid-color) 1px, transparent 1px),
    linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size);
  pointer-events: none;
  z-index: 1;
}

/* View Canvases */
.view-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  cursor: crosshair;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease;
}

.view-canvas.active {
  opacity: 1;
  visibility: visible;
}

/* Canvas-specific styles */
#top-canvas {
  /* Top view specific styles */
}

#3d-canvas {
  /* 3D view specific styles */
  cursor: grab;
}

#3d-canvas:active {
  cursor: grabbing;
}

/* Canvas States */
.view-canvas.panning {
  cursor: grabbing;
}

.view-canvas.zooming {
  cursor: zoom-in;
}

.view-canvas.placing {
  cursor: crosshair;
}

.view-canvas.erasing {
  cursor: not-allowed;
}

.view-canvas.selecting {
  cursor: pointer;
}

/* Grid Zoom Levels */
.canvas-area.zoom-out::before {
  background-size: calc(var(--grid-size) * 0.5) calc(var(--grid-size) * 0.5);
}

.canvas-area.zoom-in::before {
  background-size: calc(var(--grid-size) * 2) calc(var(--grid-size) * 2);
}

.canvas-area.zoom-far::before {
  background-size: calc(var(--grid-size) * 4) calc(var(--grid-size) * 4);
}

/* Grid Emphasis Lines (every 10 units) */
.canvas-area.show-major-grid::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    linear-gradient(rgba(100, 181, 246, 0.3) 1px, transparent 1px),
    linear-gradient(90deg, rgba(100, 181, 246, 0.3) 1px, transparent 1px);
  background-size: calc(var(--grid-size) * 10) calc(var(--grid-size) * 10);
  pointer-events: none;
  z-index: 1;
}

/* Canvas Loading State */
.canvas-area.loading::before {
  background: var(--workspace-bg);
}

.canvas-area.loading::after {
  content: 'Loading...';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--accent-blue);
  font-size: var(--font-header);
  text-transform: uppercase;
  letter-spacing: 2px;
  z-index: 10;
}

/* Selection Overlay */
.selection-overlay {
  position: absolute;
  border: 2px dashed var(--accent-blue);
  background: rgba(100, 181, 246, 0.1);
  pointer-events: none;
  z-index: 5;
}

/* Measurement Overlay */
.measurement-overlay {
  position: absolute;
  pointer-events: none;
  z-index: 6;
}

.measurement-line {
  position: absolute;
  background: var(--accent-blue);
  height: 1px;
}

.measurement-line.vertical {
  width: 1px;
  height: auto;
}

.measurement-label {
  position: absolute;
  background: var(--primary-bg);
  border: 1px solid var(--accent-blue);
  padding: 2px 6px;
  font-size: var(--font-status);
  color: var(--accent-blue);
  white-space: nowrap;
  transform: translate(-50%, -50%);
}

/* Level Indicator */
.level-indicator {
  position: absolute;
  top: var(--spacing-md);
  right: var(--spacing-md);
  background: rgba(30, 58, 95, 0.9);
  border: 1px solid var(--border-color);
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: var(--font-status);
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 1px;
  z-index: 8;
  backdrop-filter: blur(4px);
}

/* Coordinate Display */
.coordinate-display {
  position: absolute;
  bottom: var(--spacing-md);
  left: var(--spacing-md);
  background: rgba(30, 58, 95, 0.9);
  border: 1px solid var(--border-color);
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: var(--font-status);
  font-family: var(--font-family);
  z-index: 8;
  backdrop-filter: blur(4px);
}

/* Block Preview (when placing) */
.block-preview {
  position: absolute;
  border: 2px solid var(--accent-blue);
  background: rgba(100, 181, 246, 0.2);
  pointer-events: none;
  z-index: 4;
  animation: pulse 1s ease-in-out infinite alternate;
}

@keyframes pulse {
  0% { opacity: 0.4; }
  100% { opacity: 0.8; }
}

/* Tool Cursor Indicators */
.tool-cursor-place::after {
  content: '■';
  position: absolute;
  pointer-events: none;
  color: var(--accent-blue);
  font-size: 12px;
  z-index: 10;
}

.tool-cursor-erase::after {
  content: '✕';
  position: absolute;
  pointer-events: none;
  color: var(--error-color);
  font-size: 12px;
  z-index: 10;
}

/* Zoom Controls */
.zoom-controls {
  position: absolute;
  top: var(--spacing-md);
  left: var(--spacing-md);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  z-index: 9;
}

.zoom-btn {
  width: 30px;
  height: 30px;
  border: 1px solid var(--border-color);
  background: rgba(30, 58, 95, 0.9);
  color: var(--text-primary);
  cursor: pointer;
  transition: background var(--transition-fast);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-button);
  backdrop-filter: blur(4px);
}

.zoom-btn:hover {
  background: var(--hover-bg);
}

/* Minimap (future feature placeholder) */
.minimap {
  position: absolute;
  bottom: var(--spacing-md);
  right: var(--spacing-md);
  width: 120px;
  height: 120px;
  border: 1px solid var(--border-color);
  background: rgba(30, 58, 95, 0.9);
  z-index: 7;
  backdrop-filter: blur(4px);
}

.minimap-canvas {
  width: 100%;
  height: 100%;
}

/* Performance Optimization Classes */
.canvas-area.performance-mode::before,
.canvas-area.performance-mode::after {
  display: none;
}

.canvas-area.performance-mode .level-indicator,
.canvas-area.performance-mode .coordinate-display,
.canvas-area.performance-mode .zoom-controls {
  display: none;
}

/* Responsive Workspace Adjustments */
@media (max-width: 800px) {
  .level-indicator,
  .coordinate-display {
    font-size: 10px;
    padding: 4px 8px;
  }
  
  .zoom-controls {
    top: var(--spacing-sm);
    left: var(--spacing-sm);
  }
  
  .zoom-btn {
    width: 25px;
    height: 25px;
    font-size: 10px;
  }
  
  .minimap {
    width: 80px;
    height: 80px;
    bottom: var(--spacing-sm);
    right: var(--spacing-sm);
  }
}
